/*
 * ALU operation:
 * ========================
 * 00---  pass
 * 01---  M
 * 10---  left
 * 11---  right
 * ========================
 * --000  R | M      OR
 * --001  R & M      AND
 * --010  R ^ M      EOR
 * --011  R + M      ADC
 * --100  R + 0      R or INC depending on CI
 * --101  R - 1      R or DEC depending on CI
 * --110  R - M      SBC/CMP
 * --111  R & M      TRB
 *
 */

/*
 *                           next[2:0]
 * us                        carry out      ci
 * ---------                 -------        --
 * 00  | SYNC                000 keep       00 = 0
 * 01  | NEXT                001 0          01 = 1
 * 11  | SAVE + NEXT         010 1          10 = C
 * 10  | LOAD                011 ALU
 *                           1xx PLP
 *
 */

// opcode dispatcher
//
// M = load M
// do = data output
// W  = write enable
// ab = address bus control
// us = flow control (see above)
// dst = destination register
// src = source register
// aluop = ALU operation (see above)
// ci = carry input select (see above)
// next = address of next microinstruction (or flags when SYNC)
//
//   +------------------------------+---------+
//   |  when used as flag  control: |VDIN&ZCCC|
//   +------------------------------+---------+
//   |Mdo W_ab_ us dst src  aluop ci|  next   |
//   +---+-----+--+---+----+-----+--+---------+
//   |   |     |  |   |    |     |  |         |
@000  100_11001_01_111_0011_00101_00_00011000     // BRK        -> @118
@001  100_00011_11_000_0000_01101_00_00001101     // ORA (ZP,X) -> @10D
@004  100_00011_11_000_0111_10101_00_00000010     // TSB ZP     -> @102 -> @155
@005  100_00011_11_000_0111_01101_00_00000000     // ORA ZP     -> @100
@006  100_00011_11_000_0111_01100_00_00000010     // ASL ZP     -> @102 -> @14C
@008  100_11011_01_111_0011_00101_00_00010110     // PHP        -> @116
@009  100_00100_01_000_0000_00000_00_01001101     // ORA IMM    -> @14D
@00A  110_00100_00_110_0010_10100_00_00011011     // ASL A
@00C  100_00100_11_000_0111_10101_00_00000100     // TSB ABS    -> @104 -> @155
@00D  100_00100_11_000_0000_01101_00_00000001     // ORA ABS    -> @101
@00E  100_00100_11_000_0111_01100_00_00000100     // ASL ABS    -> @104 -> @14C
@010  100_00111_01_000_0000_00000_00_00000011     // BPL        -> @103
@011  100_00011_11_000_0111_01101_00_00001111     // ORA (ZP),Y -> @10F
@012  100_00011_11_000_0111_01101_00_00001101     // ORA (ZP)   -> @10D
@014  100_00011_11_000_0111_11000_00_00000010     // TSB ZP     -> @102 -> @158
@015  100_00011_11_000_0000_01101_00_00000000     // ORA ZP,X   -> @100
@016  100_00011_11_000_0000_01100_00_00000010     // ASL ZP,X   -> @102 -> @14C
@018  100_00100_00_000_0000_00000_00_00000011     // CLC
@019  100_00100_11_000_0000_01101_00_00010010     // ORA ABS,Y  -> @112
@01A  110_00100_00_110_0010_00100_01_00011000     // INA
@01C  100_00100_11_000_0111_11000_00_00000100     // TRB ABS    -> @104 -> @158
@01D  100_00100_11_000_0000_01101_00_00010001     // ORA ABS,X  -> @111
@01E  100_00100_11_000_0111_01100_00_00000101     // ASL ABS,X  -> @105 -> @14C
@020  100_11001_01_111_0011_00101_00_00001001     // JSR        -> @109
@021  100_00011_11_000_0000_01011_00_00001101     // AND (ZP,X) -> @10D
@024  100_00011_11_000_0111_01010_00_00000000     // BIT ZP     -> @100
@025  100_00011_11_000_0111_01011_00_00000000     // AND ZP     -> @100
@026  100_00011_11_000_0111_10010_00_00000010     // ROL ZP     -> @102 -> @152
@028  100_00101_01_111_0011_00100_01_00010100     // PLP        -> @114
@029  100_00100_01_000_0000_00000_00_01001011     // AND IMM    -> @14B
@02A  110_00100_00_110_0010_10100_10_00011011     // ROL A
@02C  100_00100_11_000_0111_01010_00_00000001     // BIT ABS    -> @101
@02D  100_00100_11_000_0000_01011_00_00000001     // AND ABS    -> @101
@02E  100_00100_11_000_0111_10010_00_00000100     // ROL ABS    -> @104 -> @152
@030  100_00111_01_000_0000_00000_00_00000011     // BMI        -> @103
@031  100_00011_11_000_0111_01011_00_00001111     // AND (ZP),Y -> @10F
@032  100_00011_11_000_0111_01011_00_00001101     // AND (ZP)   -> @10D
@034  100_00011_11_000_0000_01010_00_00000000     // BIT ZP,X   -> @100 -> @14A
@035  100_00011_11_000_0000_01011_00_00000000     // AND ZP,X   -> @100 -> @14B
@036  100_00011_11_000_0000_10010_00_00000010     // ROL ZP,X   -> @102 -> @152
@038  100_00100_00_000_0111_00101_01_00000011     // SEC
@039  100_00100_11_000_0000_01011_00_00010010     // AND ABS,Y  -> @112
@03A  110_00100_00_110_0010_00101_00_00011000     // DEA
@03C  100_00100_11_000_0000_01010_00_00010001     // BIT ABS,X  -> @111 -> @14A
@03D  100_00100_11_000_0000_01011_00_00010001     // AND ABS,X  -> @111 -> @14B
@03E  100_00100_11_000_0111_10010_00_00000101     // ROL ABS,X  -> @105 -> @152
@040  100_00101_01_111_0011_00100_01_00011100     // RTI        -> @11C
@041  100_00011_11_000_0000_01001_00_00001101     // EOR (ZP,X) -> @10D
@045  100_00011_11_000_0111_01001_00_00000000     // EOR ZP     -> @100
@046  100_00011_11_000_0111_10011_00_00000010     // LSR ZP     -> @102 -> @153
@048  100_11011_01_111_0011_00101_00_01000110     // PHA        -> @146
@049  100_00100_01_000_0000_00000_00_01001001     // EOR IMM    -> @149
@04A  110_00100_00_110_0010_11100_00_00011011     // LSR A
@04C  100_00100_01_000_0000_00000_00_00000110     // JMP ABS    -> @106
@04D  100_00100_11_000_0000_01001_00_00000001     // EOR ABS    -> @101
@04E  100_00100_11_000_0111_10011_00_00000100     // LSR ABS    -> @104 -> @153
@050  100_00111_01_000_0000_00000_00_00000011     // BVC        -> @103
@051  100_00011_11_000_0111_01001_00_00001111     // EOR (ZP),Y -> @10F
@052  100_00011_11_000_0111_01001_00_00001101     // EOR (ZP)   -> @10D
@055  100_00011_11_000_0000_01001_00_00000000     // EOR ZP,X   -> @100
@056  100_00011_11_000_0000_10011_00_00000010     // LSR ZP,X   -> @102 -> @153
@058  100_00100_00_000_0000_00000_00_00100000     // CLI
@059  100_00100_11_000_0000_01001_00_00010010     // EOR ABS,Y  -> @112
@05A  100_11011_01_111_0011_00101_00_01001000     // PHY        -> @148
@05D  100_00100_11_000_0000_01001_00_00010001     // EOR ABS,X  -> @111
@05E  100_00100_11_000_0111_10011_00_00000101     // LSR ABS,X  -> @105 -> @153
@060  100_00101_01_111_0011_00100_01_00001011     // RTS        -> @10B
@061  100_00011_11_000_0000_00011_00_00001101     // ADC (ZP,X) -> @10D
@064  100_10011_01_000_0111_00000_00_01010110     // STZ ZP     -> @156
@065  100_00011_11_000_0111_00011_00_00000000     // ADC ZP     -> @100
@066  100_00011_11_000_0111_10100_00_00000010     // ROR ZP     -> @102 -> @154
@068  100_00101_01_111_0011_00100_01_00000111     // PLA        -> @107
@069  100_00100_01_000_0000_00000_00_01000011     // ADC IMM    -> @140
@06A  110_00100_00_110_0010_11100_10_00011011     // ROR A
@06C  100_00100_01_000_0000_00011_00_00100111     // JMP (ABS)  -> @127
@07C  100_00100_01_000_0000_00011_00_00101101     // JMP (ABS,X)-> @12D
@06D  100_00100_11_000_0000_00011_00_00000001     // ADC ABS    -> @101
@06E  100_00100_11_000_0111_10100_00_00000100     // ROR ABS    -> @104 -> @154
@070  100_00111_01_000_0000_00000_00_00000011     // BVS        -> @103
@071  100_00011_11_000_0111_00011_00_00001111     // ADC (ZP),Y -> @10F
@072  100_00011_11_000_0111_00011_00_00001101     // ADC (ZP)   -> @10D
@074  100_10011_01_000_0000_00000_00_01010110     // STZ ZP,X   -> @156
@075  100_00011_11_000_0000_00011_00_00000000     // ADC ZP,X   -> @100
@076  100_00011_11_000_0000_10100_00_00000010     // ROR ZP,X   -> @102 -> @154
@078  100_00100_00_000_0000_00000_00_00100000     // SEI
@079  100_00100_11_000_0000_00011_00_00010010     // ADC ABS,Y  -> @112
@07A  100_00101_01_111_0011_00100_01_00010011     // PLY        -> @113
@07D  100_00100_11_000_0000_00011_00_00010001     // ADC ABS,X  -> @111
@07E  100_00100_11_000_0111_10100_00_00000101     // ROR ABS,X  -> @105 -> @154
@080  100_00111_01_000_0000_00000_00_00000011     // BRA        -> @103
@081  100_00011_11_000_0000_00110_00_00100011     // STA (ZP,X) -> @123 -> @146
@084  100_10011_01_000_0111_00000_00_01001000     // STY ZP     -> @148
@085  100_10011_01_000_0111_00000_00_01000110     // STA ZP     -> @146
@086  100_10011_01_000_0111_00000_00_01000111     // STX ZP     -> @147
@088  110_00100_00_101_0001_00101_00_00011000     // DEY
@089  100_00100_01_000_0000_00000_00_01010111     // BIT IMM    -> @157
@08A  110_00100_00_110_0000_00100_00_00011000     // TXA
@08C  100_00100_11_000_0111_01000_00_00100000     // STY ABS    -> @120 -> @148
@08D  100_00100_11_000_0111_00110_00_00100000     // STA ABS    -> @120 -> @146
@08E  100_00100_11_000_0111_00111_00_00100000     // STX ABS    -> @120 -> @147
@090  100_00111_01_000_0000_00000_00_00000011     // BCC        -> @103
@091  100_00011_11_000_0111_00110_00_00100101     // STA (ZP),Y -> @125 -> @146
@092  100_00011_11_000_0111_00110_00_00100011     // STA (ZP)   -> @123 -> @146
@094  100_10011_01_000_0000_00000_00_01001000     // STY ZP,X   -> @148
@095  100_10011_01_000_0000_00000_00_01000110     // STA ZP,X   -> @146
@096  100_10011_01_000_0001_00000_00_01000111     // STX ZP,Y   -> @147
@098  110_00100_00_110_0001_00100_00_00011000     // TYA
@099  100_00100_11_000_0111_00110_00_00100010     // STA ABS,Y  -> @122 -> @146
@09A  100_00100_00_111_0000_00100_00_00000000     // TXS
@09C  100_00100_11_000_0111_10110_00_00100000     // STZ ABS    -> @120 -> @156
@09D  100_00100_11_000_0111_00110_00_00100001     // STA ABS,X  -> @121 -> @146
@09E  100_00100_11_000_0111_10110_00_00100001     // STZ ABS,X  -> @121 -> @156
@0A0  100_00100_01_000_0000_00000_00_01000010     // LDY IMM    -> @142
@0A1  100_00011_11_000_0000_00000_00_00001101     // LDA (ZP,X) -> @10D
@0A2  100_00100_01_000_0000_00000_00_01000001     // LDX IMM    -> @141
@0A4  100_00011_11_000_0111_00010_00_00000000     // LDY ZP     -> @100 -> @142
@0A5  100_00011_11_000_0111_00000_00_00000000     // LDA ZP     -> @100
@0A6  100_00011_11_000_0111_00001_00_00000000     // LDX ZP     -> @100 -> @141
@0A8  110_00100_00_101_0010_00100_00_00011000     // TAY
@0A9  100_00100_01_000_0000_00000_00_01000000     // LDA IMM    -> @140
@0AA  110_00100_00_100_0010_00100_00_00011000     // TAX
@0AC  100_00100_11_000_0000_00010_00_00000001     // LDA ABS    -> @101 -> @142
@0AD  100_00100_11_000_0000_00000_00_00000001     // LDY ABS    -> @101
@0AE  100_00100_11_000_0000_00001_00_00000001     // LDX ABS    -> @101
@0B0  100_00111_01_000_0000_00000_00_00000011     // BCS        -> @103
@0B1  100_00011_11_000_0111_00000_00_00001111     // LDA (ZP),Y -> @10F
@0B2  100_00011_11_000_0111_00000_00_00001101     // LDA (ZP)   -> @10D
@0B4  100_00011_11_000_0000_00010_00_00000000     // LDY ZP,X   -> @100 -> @142
@0B5  100_00011_11_000_0000_00000_00_00000000     // LDA ZP,X   -> @100
@0B6  100_00011_11_000_0001_00001_00_00000000     // LDX ZP,Y   -> @100 -> @141
@0B8  100_00100_00_000_0111_00011_00_10000000     // CLV
@0B9  100_00100_11_000_0000_00000_00_00010010     // LDA ABS,Y  -> @112 -> @140
@0BA  110_00100_00_100_0011_00100_00_00011000     // TSX
@0BC  100_00100_11_000_0000_00010_00_00010001     // LDY ABS,X  -> @111
@0BD  100_00100_11_000_0000_00000_00_00010001     // LDA ABS,X  -> @111
@0BE  100_00100_11_000_0000_00001_00_00010010     // LDX ABS,Y  -> @112 -> @141
@0C0  100_00100_01_000_0000_00000_00_01010001     // CPY IMM    -> @151
@0C1  100_00011_11_000_0000_01110_00_00001101     // CMP (ZP,X) -> @10D
@0C4  100_00011_11_000_0111_10001_00_00000000     // CPY ZP     -> @100 -> @151
@0C5  100_00011_11_000_0111_01110_00_00000000     // CMP ZP     -> @100
@0C6  100_00011_11_000_0111_00101_00_00000010     // DEC ZP     -> @102 -> @145
@0C8  110_00100_00_101_0001_00100_01_00011000     // INY
@0C9  100_00100_01_000_0000_00000_00_01001110     // CMP IMM    -> @14E
@0CA  110_00100_00_100_0000_00101_00_00011000     // DEX
@0CC  100_00100_11_000_0111_10001_00_00000001     // CPY ABS    -> @100 -> @151
@0CD  100_00100_11_000_0000_01110_00_00000001     // CMP ABS    -> @101
@0CE  100_00100_11_000_0111_00101_00_00000100     // DEC ABS    -> @104 -> @145
@0D0  100_00111_01_000_0000_00000_00_00000011     // BNE        -> @103
@0D1  100_00011_11_000_0111_01110_00_00001111     // CMP (ZP),Y -> @10F
@0D2  100_00011_11_000_0111_01110_00_00001101     // CMP (ZP)   -> @10D
@0D5  100_00011_11_000_0000_01110_00_00000000     // CMP ZP,X   -> @100
@0D6  100_00011_11_000_0000_00101_00_00000010     // DEC ZP,X   -> @102
@0D8  100_00100_00_000_0000_00000_00_01000000     // CLD
@0D9  100_00100_11_000_0000_01110_00_00010010     // CMP ABS,Y  -> @112
@0DA  100_11011_01_111_0011_00101_00_01000111     // PHX        -> @147
@0DD  100_00100_11_000_0000_01110_00_00010001     // CMP ABS,X  -> @111
@0DE  100_00100_11_000_0111_00101_00_00000101     // DEC ABS,X  -> @105 -> @145
@0E0  100_00100_01_000_0000_00000_00_01010000     // CPX IMM    -> @150
@0E1  100_00011_11_000_0000_01111_00_00001101     // SBC (ZP,X) -> @10D
@0E4  100_00011_11_000_0111_10000_00_00000000     // CPX ZP     -> @100 -> @150
@0E5  100_00011_11_000_0111_01111_00_00000000     // SBC ZP     -> @100
@0E6  100_00011_11_000_0111_00100_00_00000010     // INC ZP     -> @102
@0E8  110_00100_00_100_0000_00100_01_00011000     // INX
@0E9  100_00100_01_000_0000_00000_00_01001111     // SBC IMM    -> @14F
@0EA  100_00100_00_000_0000_00000_00_00000000     // NOP
@0EC  100_00100_11_000_0111_10000_00_00000001     // CPX ABS    -> @100 -> @150
@0ED  100_00100_11_000_0000_01111_00_00000001     // SBC ABS    -> @101
@0EE  100_00100_11_000_0111_00100_00_00000100     // INC ABS    -> @104
@0F0  100_00111_01_000_0000_00000_00_00000011     // BEQ        -> @103
@0F1  100_00011_11_000_0111_01111_00_00001111     // SBC (ZP),Y -> @10F
@0F2  100_00011_11_000_0111_01111_00_00001101     // SBC (ZP)   -> @10D
@0F5  100_00011_11_000_0000_01111_00_00000000     // SBC ZP,X   -> @100
@0F6  100_00011_11_000_0000_00100_00_00000010     // INC ZP,X   -> @102
@0F8  100_00100_00_000_0000_00000_00_01000000     // SED
@0F9  100_00100_11_000_0000_01111_00_00010010     // SBC ABS,Y  -> @112
@0FA  100_00101_01_111_0011_00100_01_00001000     // PLX        -> @108
@0FD  100_00100_11_000_0000_01111_00_00010001     // SBC ABS,X  -> @111
@0FE  100_00100_11_000_0111_00100_00_00000101     // INC ABS,X  -> @105 -> @144

// preppers
@100  100_00001_10_000_0000_00000_00_00000000     // DATA       -> FIN
@101  100_00010_01_000_0111_00000_00_00000000     // ABS        -> @100
@102  100_10000_10_000_0000_00000_00_00000000     // RMW
@103  100_00100_00_000_0000_00000_00_00000000     // NOP
@104  100_00010_01_000_0111_00000_00_00000010     // ABS RMW    -> @100
@105  100_00010_01_000_0000_00000_00_00000010     // ABS,X RMW  -> @100
@106  100_00010_01_000_0111_00000_00_00000011     // JMP ABS    -> @103
@107  100_00001_01_000_0000_00000_00_01000000     // PLA        -> @140
@108  100_00001_01_000_0000_00000_00_01000001     // PLX        -> @141
@109  111_11000_01_111_0011_00101_00_00001010     // JSR        -> @10A
@10A  110_00001_01_000_0000_00000_00_00000110     // JSR        -> @10A
@10B  100_00101_01_111_0011_00100_01_00001100     // RTS        -> @10C
@10C  100_01110_01_000_0111_00000_00_00000011     // RTS        -> @103
@10D  100_01100_01_000_0000_00000_00_00001110     // (ZP)       -> @10E
@10E  100_01010_01_000_0111_00000_00_00000000     // (ZP)       -> @100
@10F  100_01100_01_000_0000_00000_00_00010000     // (ZP),Y     -> @110
@110  100_01010_01_000_0001_00000_00_00000000     // (ZP),Y     -> @100
@111  100_00010_01_000_0000_00000_00_00000000     // ABS,X      -> @100
@112  100_00010_01_000_0001_00000_00_00000000     // ABS,Y      -> @100
@113  100_00001_01_000_0000_00000_00_01000010     // PLY        -> @142
@114  100_00001_01_000_0000_00000_00_00010101     // PLP        -> @115
@115  101_00100_00_000_0111_11011_00_10010111     // PLP
@116  101_00001_01_000_0000_00000_01_00000011     // PHP        -> @103 (B=1)
@117  110_00100_00_000_0111_00011_01_00011000     // INC done 
@118  111_11000_01_111_0011_00101_00_00011001     // BRK        -> @119
@119  110_11000_01_111_0011_00101_00_00011010     // BRK        -> @11A
@11A  101_01111_01_000_1010_00000_01_00011011     // BRK        -> @11B (B=1)
@11B  100_01100_01_000_0000_00000_00_00101000     // BRK        -> @128
@11C  100_00101_01_111_0011_00100_01_00011101     // RTI        -> @11D
@11D  000_00101_01_111_0011_00100_01_00011110     // RTI        -> @11E (inh M)
@11E  000_00010_01_000_0111_11011_00_00010101     // RTI        -> @115 (inh M)
//@11F  110_00100_00_000_0111_00000_00_00011001     // NOP with NZC (using delayed carry/alu passes M)
@120  100_10010_10_000_0111_00000_00_00000000     // STA ABS    -> FIN
@121  100_10010_10_000_0000_00000_00_00000000     // STA ABS,X  -> FIN
@122  100_10010_10_000_0001_00000_00_00000000     // STA ABS,Y  -> FIN
@123  100_01100_01_000_0000_00000_00_00100100     // (ZP)       -> @124
@124  100_11010_10_000_0111_00000_00_00000000     // (ZP)       -> FIN
@125  100_01100_01_000_0000_00000_00_00100110     // (ZP),Y     -> @126
@126  100_11010_10_000_0001_00000_00_00000000     // (ZP),Y     -> FIN
@127  100_00010_01_000_0111_00000_00_00101110     // JMP (IND)  -> @11B
@128  100_00010_01_000_0111_00000_00_00101001     // BRK JMP    -> @129
@129  100_00100_00_000_0000_00000_00_01100000     // BRK JMP
@12A  110_00100_00_000_0010_00001_00_00000000     // RMW with TSB/TRB
@12B  110_00100_00_000_0110_00011_00_00011000     // DEC done 
@12C  110_00100_00_000_0111_10011_00_00011011     // ASL done
@12D  100_00010_01_000_0000_00000_00_00101110     // JMP (IND,X)-> @11B
@12E  100_01100_01_000_0000_00000_00_00101111     // JMP (IND,X)-> @12F
@12F  100_00010_01_000_0111_00000_00_00110000     // JMP (IND,X)-> @130
@130  100_00100_00_000_0000_00000_00_00000000     // JMP (IND,X) 
@131  110_00100_00_000_0111_10011_10_00011011     // ROL done
@132  110_00100_00_000_0111_11011_00_00011011     // LSR done
@133  110_00100_00_000_0111_11011_10_00011011     // ROR done

// finishers
@140  110_00100_00_110_0111_00000_00_00011000     // LDA, SYNC
@141  110_00100_00_100_0111_00000_00_00011000     // LDX, SYNC
@142  110_00100_00_101_0111_00000_00_00011000     // LDY, SYNC
@143  110_00100_00_110_0010_00011_11_10011011     // ADC, SYNC
@144  000_00001_01_000_0111_00011_01_00010111     // INC, NZ    -> @117
@145  000_00001_01_000_0110_00011_00_00101011     // DEC, NZ    -> @12B
@146  100_00001_01_000_0010_00100_00_00000011     // STA, NOP   -> @103
@147  100_00001_01_000_0000_00100_00_00000011     // STX, NOP   -> @103
@148  100_00001_01_000_0001_00100_00_00000011     // STY, NOP   -> @103
@149  110_00100_00_110_0010_00010_00_00011000     // EOR, SYNC
@14A  111_00100_00_000_0010_00001_00_10001000     // BIT, SYNC
@14B  110_00100_00_110_0010_00001_00_00011000     // AND, SYNC
@14C  000_00001_01_000_0111_10011_00_00101100     // ASL, NZC   -> @12C
@14D  110_00100_00_110_0010_00000_00_00011000     // ORA, SYNC
@14E  110_00100_00_000_0010_00110_01_00011011     // CMP, SYNC
@14F  110_00100_00_110_0010_00110_11_10011011     // SBC, SYNC
@150  110_00100_00_000_0000_00110_01_00011011     // CPX, SYNC
@151  110_00100_00_000_0001_00110_01_00011011     // CPY, SYNC
@152  000_00001_01_000_0111_10011_10_00110001     // ROL, NZC   -> @131
@153  000_00001_01_000_0111_11011_00_00110010     // LSR, NZC   -> @132
@154  000_00001_01_000_0111_11011_10_00110011     // ROR, NZC   -> @133
@155  000_00001_01_000_0010_00000_00_00101010     // TSB        -> @12A
@156  100_00001_01_000_0111_00100_00_00000011     // STZ, NOP   -> @103
@157  111_00100_00_000_0010_00001_00_00000000     // BIT IMM, SYNC
@158  000_00001_01_000_0010_00111_00_00101010     // TRB        -> @12A

// IRQ handler
@160  100_11000_01_111_0011_00101_00_01100001     // IRQ        -> @161
@161  111_11000_01_111_0011_00101_00_01100010     // IRQ        -> @162
@162  110_11000_01_111_0011_00101_00_01100011     // IRQ        -> @163
@163  101_01111_01_000_1010_00000_00_01100100     // IRQ        -> @164 (B=0)
@164  100_01100_01_000_0000_00000_00_01100101     // IRQ        -> @165
@165  100_01010_01_000_0111_00000_00_01100110     // IRQ        -> @166
@166  100_00100_00_000_0111_00000_00_01100000     // IRQ done

// NMI handler
@168  111_11000_01_111_0011_00101_00_01101001     // NMI        -> @169
@169  110_11000_01_111_0011_00101_00_01101010     // NMI        -> @16a
@16A  101_01111_01_000_1000_00000_00_01101011     // NMI        -> @16b (B=0)
@16B  100_01100_01_000_0000_00000_00_01101100     // NMI        -> @16c
@16C  100_01010_01_000_0111_00000_00_01101101     // NMI        -> @16d
@16D  100_00100_00_000_0111_00000_00_01100000     // NMI done

// reset handler
@170  100_01111_01_000_1001_00000_00_01110001     // RESET      -> @171
@171  100_00100_01_000_0111_00000_00_01110010     // RESET      -> @172
@172  100_00010_01_000_0111_00000_00_01110011     // RESET      -> @173
@173  100_00100_00_000_0111_00000_00_01110000     // RESET      -> @174

/*
 * The section 180-1FF repeats the section 100-17F, but 
 * with decimal mode enabled (D=1). Most will be the same, except for ADC/SBC. 
 * If you want, it's easy to modify behavior of any other instruction.
 */
@180  100_00001_10_000_0000_00000_00_00000000     // DATA       -> FIN
@181  100_00010_01_000_0111_00000_00_00000000     // ABS        -> @100
@182  100_10000_10_000_0000_00000_00_00000000     // RMW
@183  100_00100_00_000_0000_00000_00_00000000     // NOP
@184  100_00010_01_000_0111_00000_00_00000010     // ABS RMW    -> @100
@185  100_00010_01_000_0000_00000_00_00000010     // ABS,X RMW  -> @100
@186  100_00010_01_000_0111_00000_00_00000011     // JMP ABS    -> @103
@187  100_00001_01_000_0000_00000_00_01000000     // PLA        -> @140
@188  100_00001_01_000_0000_00000_00_01000001     // PLX        -> @141
@189  111_11000_01_111_0011_00101_00_00001010     // JSR        -> @10A
@18A  110_00001_01_000_0000_00000_00_00000110     // JSR        -> @10A
@18B  100_00101_01_111_0011_00100_01_00001100     // RTS        -> @10C
@18C  100_01110_01_000_0111_00000_00_00000011     // RTS        -> @103
@18D  100_01100_01_000_0000_00000_00_00001110     // (ZP)       -> @10E
@18E  100_01010_01_000_0111_00000_00_00000000     // (ZP)       -> @100
@18F  100_01100_01_000_0000_00000_00_00010000     // (ZP),Y     -> @110
@190  100_01010_01_000_0001_00000_00_00000000     // (ZP),Y     -> @100
@191  100_00010_01_000_0000_00000_00_00000000     // ABS,X      -> @100
@192  100_00010_01_000_0001_00000_00_00000000     // ABS,Y      -> @100
@193  100_00001_01_000_0000_00000_00_01000010     // PLY        -> @142
@194  100_00001_01_000_0000_00000_00_00010101     // PLP        -> @115
@195  101_00100_00_000_0111_11011_00_10010111     // PLP
@196  101_00001_01_000_0000_00000_01_00000011     // PHP        -> @103 (B=1)
@197  110_00100_00_000_0111_00011_01_00011000     // INC done 
@198  111_11000_01_111_0011_00101_00_00011001     // BRK        -> @119
@199  110_11000_01_111_0011_00101_00_00011010     // BRK        -> @11A
@19A  101_01111_01_000_1010_00000_01_00011011     // BRK        -> @11B (B=1)
@19B  100_01100_01_000_0000_00000_00_00101000     // BRK        -> @128
@19C  100_00101_01_111_0011_00100_01_00011101     // RTI        -> @11D
@19D  000_00101_01_111_0011_00100_01_00011110     // RTI        -> @11E (inh M)
@19E  000_00010_01_000_0111_11011_00_00010101     // RTI        -> @115 (inh M)
//@19F  110_00100_00_000_0111_00000_00_00011001     // NOP with NZC (using delayed carry/alu passes M)
@1A0  100_10010_10_000_0111_00000_00_00000000     // STA ABS    -> FIN
@1A1  100_10010_10_000_0000_00000_00_00000000     // STA ABS,X  -> FIN
@1A2  100_10010_10_000_0001_00000_00_00000000     // STA ABS,Y  -> FIN
@1A3  100_01100_01_000_0000_00000_00_00100100     // (ZP)       -> @124
@1A4  100_11010_10_000_0111_00000_00_00000000     // (ZP)       -> FIN
@1A5  100_01100_01_000_0000_00000_00_00100110     // (ZP),Y     -> @126
@1A6  100_11010_10_000_0001_00000_00_00000000     // (ZP),Y     -> FIN
@1A7  100_00010_01_000_0111_00000_00_00101110     // JMP (IND)  -> @12E
@1A8  100_00010_01_000_0111_00000_00_00101001     // BRK JMP    -> @129
@1A9  100_00100_00_000_0000_00000_00_01100000     // BRK JMP
@1AA  110_00100_00_000_0010_00001_00_00000000     // RMW with TSB/TRB
@1AB  110_00100_00_000_0110_00011_00_00011000     // DEC done 
@1AC  110_00100_00_000_0111_10011_00_00011011     // ASL done
@1AD  100_00010_01_000_0000_00000_00_00101110     // JMP (IND,X)-> @11B
@1AE  100_01100_01_000_0000_00000_00_00101111     // JMP (IND,X)-> @12F
@1AF  100_00010_01_000_0111_00000_00_00110000     // JMP (IND,X)-> @130
@1B0  100_00100_00_000_0000_00000_00_00000000     // JMP (IND,X) 
@1B1  110_00100_00_000_0111_10011_10_00011011     // ROL done
@1B2  110_00100_00_000_0111_11011_00_00011011     // LSR done
@1B3  110_00100_00_000_0111_11011_10_00011011     // ROR done

// finishers (decimal mode)
@1C0  110_00100_00_110_0111_00000_00_00011000     // LDA, SYNC
@1C1  110_00100_00_100_0111_00000_00_00011000     // LDX, SYNC
@1C2  110_00100_00_101_0111_00000_00_00011000     // LDY, SYNC
@1C3  110_00000_01_110_0010_00011_11_11011001     // ADC, SYNC  -> @1D9
@1C4  000_00001_01_000_0111_00011_01_00010111     // INC, NZ    -> @117
@1C5  000_00001_01_000_0110_00011_00_00101011     // DEC, NZ    -> @12B
@1C6  100_00001_01_000_0010_00100_00_00000011     // STA, NOP   -> @103
@1C7  100_00001_01_000_0000_00100_00_00000011     // STX, NOP   -> @103
@1C8  100_00001_01_000_0001_00100_00_00000011     // STY, NOP   -> @103
@1C9  110_00100_00_110_0010_00010_00_00011000     // EOR, SYNC
@1CA  111_00100_00_000_0010_00001_00_10001000     // BIT, SYNC
@1CB  110_00100_00_110_0010_00001_00_00011000     // AND, SYNC
@1CC  000_00001_01_000_0111_10011_00_00101100     // ASL, NZC   -> @12C
@1CD  110_00100_00_110_0010_00000_00_00011000     // ORA, SYNC
@1CE  110_00100_00_000_0010_00110_01_00011011     // CMP, SYNC
@1CF  110_00000_01_110_0010_00110_11_11011010     // SBC, SYNC  -> @1DA
@1D0  110_00100_00_000_0000_00110_01_00011011     // CPX, SYNC
@1D1  110_00100_00_000_0001_00110_01_00011011     // CPY, SYNC
@1D2  000_00001_01_000_0111_10011_10_00110001     // ROL, NZC   -> @131
@1D3  000_00001_01_000_0111_11011_00_00110010     // LSR, NZC   -> @132
@1D4  000_00001_01_000_0111_11011_10_00110011     // ROR, NZC   -> @133
@1D5  000_00001_01_000_0010_00000_00_00101010     // TSB        -> @12A
@1D6  100_00001_01_000_0111_00100_00_00000011     // STZ, NOP   -> @103
@1D7  111_00100_00_000_0010_00001_00_00000000     // BIT IMM, SYNC
@1D8  000_00001_01_000_0010_00111_00_00101010     // TRB        -> @12A
@1D9  110_00100_00_110_0010_00011_00_00011011     // ADC BCD ADJ
@1DA  110_00100_00_110_0010_00110_01_00011011     // SBC BCD ADJ

// NMI handler, first cycle
@1E0  100_11000_01_111_0011_00101_00_01101000     // NMI        -> @168

// IRQ handler, 2nd cycle when in decimal mode
@1E1  111_11000_01_111_0011_00101_00_01100010     // IRQ        -> @162
@1E2  110_11000_01_111_0011_00101_00_01100011     // IRQ        -> @163
@1E3  101_01111_01_000_1010_00000_00_01100100     // IRQ        -> @164 (B=0)
@1E4  100_01100_01_000_0000_00000_00_01100101     // IRQ        -> @165
@1E5  100_01010_01_000_0111_00000_00_01100110     // IRQ        -> @166
@1E6  100_00100_00_000_0111_00000_00_01100000     // IRQ done

// NMI handler, 2nd cycle decimal mode
@1E8  111_11000_01_111_0011_00101_00_01101001     // NMI        -> @169
@1E9  110_11000_01_111_0011_00101_00_01101010     // NMI        -> @16a
@1EA  101_01111_01_000_1000_00000_00_01101011     // NMI        -> @16b (B=0)
@1EB  100_01100_01_000_0000_00000_00_01101100     // NMI        -> @16c
@1EC  100_01010_01_000_0111_00000_00_01101101     // NMI        -> @16d
@1ED  100_00100_00_000_0111_00000_00_01100000     // NMI done

// reset handler
@1F0  100_01111_01_000_1001_00000_00_01110001     // RESET      -> @171
@1F1  100_00100_01_000_0111_00000_00_01110010     // RESET      -> @172
@1F2  100_00010_01_000_0111_00000_00_01110011     // RESET      -> @173
@1F3  100_00100_00_000_0111_00000_00_01110000     // RESET      -> @174

@1FF  000_00000_01_000_0000_00000_00_01110000     // initial RESET
